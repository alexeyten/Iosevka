### Punctuation symbols
$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Symbol-Punctuation-Emotion : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	local questionBottom : Math.max (CAP * 0.3) (DotSize * 1.5)
	local [questionYConnectT top questionBottom] : mix questionBottom (top - HalfStroke) 0.375

	define PunctuationVariants: object
		circle { DotAt    }
		square { SquareAt }

	foreach { suffix { DrawAt } } [Object.entries PunctuationVariants] : do

		create-glyph "exclam.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityF
			set-width df.width
			include : MarkSet.capital
			include : VBar df.middle [clamp 0 (CAP * 0.4) (questionBottom * 1.18)] CAP
			include : DrawAt df.middle DotRadius (DotRadius - O)

	select-variant 'exclam' '!' (follow -- 'punctuation')
	alias 'alveolarclick' 0x1C3 'exclam'
	turned 'exclamDown'  0xA1   'exclam'  [DivFrame para.diversityF].middle (XH / 2)

	define [QuestionSmoothShape top questionBottom left right] : glyph-proc
		define strokeEndCor : Math.hypot 1 TanSlope
		include : dispiro
			widths.rhs
			g4 left (top - Hook)
			hookstart (top - O)
			g4 right (top - SmoothB * 0.9)
			alsoThru.g2 0.5 0.45 [widths.center EssQuestion]
			straight.down.end ([mix left right 0.5] - HalfStroke * HVContrast * strokeEndCor) questionBottom [widths.heading (Stroke * strokeEndCor) 0 Downward]

	define [QuestionCornerShape top questionBottom left right] : glyph-proc
		local questionYConnect : questionYConnectT top questionBottom
		include : dispiro
			widths.rhs
			g4 left (top - Hook)
			hookstart (top - O)
			g4 (right - OX) [YSmoothMidR top (questionYConnect - Stroke) SmoothA SmoothB]
			arcvh
			straight.left.end [mix left right 0.5] (questionYConnect - Stroke) [heading Leftward]
		include : VBar [mix left right 0.5] questionBottom questionYConnect

	define [QuestionCornerFlatShape top questionBottom left right] : glyph-proc
		local questionYConnect : questionYConnectT top questionBottom
		local depth : Math.max (Stroke * 1.5) ((right - left) * 0.5)
		include : dispiro
			widths.rhs
			flat [mix left right 0.125] top [heading Rightward]
			curl (right - depth - CorrectionOMidS) top
			archv
			g4 (right - OX) [YSmoothMidR top (questionYConnect - Stroke) SmoothA SmoothB]
			arcvh
			straight.left.end [mix left right 0.5] (questionYConnect - Stroke) [heading Leftward]
		include : VBar [mix left right 0.5] questionBottom questionYConnect

	define QuestionConfig : object
		smooth           { QuestionSmoothShape     }
		corner           { QuestionCornerShape     }
		cornerFlatHooked { QuestionCornerFlatShape }

	foreach { suffix { Body } } [Object.entries QuestionConfig] : do
		create-glyph "question.\(suffix)" : glyph-proc
			include : Body CAP questionBottom SB RightSB
			include : DotAt Middle DotRadius (DotRadius - O)

		create-glyph "interrobang.\(suffix)" : glyph-proc
			local angle : 12 / 180 * Math.PI
			include : Body CAP questionBottom [mix Middle SB 0.75] RightSB
			include : Translate (-Middle) (-DotRadius)
			include : Rotate (-2 * angle)
			include : Translate Middle DotRadius
			include : VBar Middle questionBottom CAP
			include : Translate (-Middle) (-DotRadius)
			include : Rotate (1.2 * angle)
			include : Translate Middle DotRadius
			include : DotAt Middle DotRadius (DotRadius - O)

	select-variant 'question' '?'
	turned 'questionDown'0xBF   'question'    Middle (XH / 2)
	select-variant 'interrobang' 0x203D (follow -- 'question')
	turned 'gnaborretni' 0x2E18 'interrobang' Middle (CAP / 2)
